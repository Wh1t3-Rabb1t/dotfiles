#!/usr/bin/env zsh

# ---------------------------------------------------------------------------- #
# Rename all files in cwd.                                                     #
# ---------------------------------------------------------------------------- #

emulate -L zsh

        # mv "$FILE" "$(echo "$FILE" | sed -E "s/$1/$2/g")"

        # mv "$FILE" $(echo "$FILE" | sed -E "s/\\b\($1\)\\b/$2/g")

# Use IFS= read -r FILE to correctly handle filenames with spaces and special characters.
# Use -E with sed for extended regular expressions, which makes it easier to use \b for word boundaries.
# Added double quotes around $(pwd) to correctly handle directories with spaces.



if [[ $# -eq 2 ]]; then
    find "$(pwd)" -type f | while IFS= read FILE; do
        mv "$FILE" "$(echo "$FILE" | sed "s/${1}/${2}/g")"
    done
else
    echo -e "\nTwo arguments required."
fi


# find "$(pwd)" -type f | while IFS= read -r FILE; do
#     ffmpeg -i "$FILE" "${FILE%.*}.png"
# done




# local arrow="\e[0m\e[33m>\e[m"
# local green="\e[0m\e[33m"
# local grey="\e[38;5;245m"
# local color_end="\e[m"

# if [ $# -eq 0 ]; then
#     echo -e "\nNo arguments given."
# elif [ $# -eq 1 ]; then
#     echo -e "\nSecond argument required."
# elif [ $# -eq 2 ]; then
#     mv $1 $2
#     echo -e " "; lsd -A -v
#     echo -e "\n${grey}==========================================${color_end}"
#     echo -e "\n${arrow}  $1"
#     echo -e "\n${green}Renamed${color_end} to:"
#     echo -e "\n${arrow}  $2"
# else
#     echo -e "\nError."
# fi

