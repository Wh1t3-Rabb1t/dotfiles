#!/usr/bin/env zsh

# ---------------------------------------------------------------------------- #
# Print zsh keybindings / help pages.                                          #
# ---------------------------------------------------------------------------- #
# Args    : None                                                               #
# Globals : ZDOTDIR                                                            #
# ---------------------------------------------------------------------------- #

emulate -L zsh

local FZF_STATE_DIR="$(mktemp -d "${VI_STATE_DIR}/fzf_state_XXXXXXXXX")"
mkdir -p "$FZF_STATE_DIR"
trap 'rm -rf "$FZF_STATE_DIR"' EXIT

local HEADER_TEMPLATE="ïƒ« Zsh help pages.
Alt _ : Show dotfiles."

local TOGGLE_HIDDEN_FLAG='
    [[ -L "'"$FZF_STATE_DIR"'/hidden" ]] \
        && rm "'"$FZF_STATE_DIR"'/hidden" \
        || ln -s "" "'"$FZF_STATE_DIR"'/hidden"
'

local RELOAD_OPTS='
    local FD_CMD="fd --type=file --extension=md --color=always"
    local HEADER="'"$HEADER_TEMPLATE"'"

    [[ -L "'"$FZF_STATE_DIR"'/hidden" ]] && \
        HEADER="${HEADER/Show dotfiles./Hide dotfiles.}" \
        FD_CMD+=" --hidden"

    echo "change-header('\$HEADER')+reload('\$FD_CMD')"
'

pushd "$ZDOTDIR"

local selection=$( \
    fd \
        --type=file \
        --extension=md \
        --color=always \
    | fzf \
        --tac \
        --header-border=top \
        --header=$HEADER_TEMPLATE \
        --bind="alt-_:transform:$TOGGLE_HIDDEN_FLAG+$RELOAD_OPTS" \
)

# Cleanup fzf state directory on exit
[[ -d "$FZF_STATE_DIR" ]] && rm -rf "$FZF_STATE_DIR"

if [[ "$selection" ]]; then
    if (( ${+commands[glow]} )); then
        glow "$selection"; print "\n"
    elif (( ${+commands[bat]} )); then
        bat --line-range=0:10000 "$selection"; print "\n"
    else
        cat "$selection"; print "\n"
    fi

    zle redisplay
fi

popd
